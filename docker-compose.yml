version: '3.7'
services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: yourusername
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: yourdbname
    networks:
      - web

  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - web

  backend:
    build: ./backend
    networks:
      - web
    environment:
      - DATABASE_URL=postgresql://yourusername:yourpassword@db/yourdbname
      - TRAEFIK_HOST=raven.taiwo.chickenkiller.com
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`raven.taiwo.chickenkiller.com`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  frontend:
    build: ./frontend
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`raven.taiwo.chickenkiller.com`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    restart: always
    ports:
      - "8082:80"
      - "8444:443"
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
    volumes:
      - ./data:/data
    networks:
      - web

  traefik:
    image: traefik:v2.2
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:8080"
      - "--entrypoints.websecure.address=:8443"
    ports:
      - "8083:8080"
      - "8445:8443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik.toml:/traefik.toml"
    networks:
      - web

networks:
  web:
    external: true

